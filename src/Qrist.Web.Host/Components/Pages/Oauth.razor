@page "/Todoist/Oauth"
@using System.Threading
@using Microsoft.Extensions.Logging
@using Qrist.Adapters.Todoist.Authorisation
@inject ITodoistAuthoriser TodoistAuthoriser
@inject NavigationManager NavigationManager
@inject ILogger<Oauth> Logger

<PageTitle>Qrist</PageTitle>

@code {

    [SupplyParameterFromQuery(Name = "code")]
    private string Code { get; set; }

    [SupplyParameterFromQuery(Name = "state")]
    private string State { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var id =
                await
                    TodoistAuthoriser
                        .RetrieveAndCacheAccessTokenByIdAsync(Code, State, CancellationToken.None);

            if (!id.HasValue)
                throw new Exception("There was an error.");

            NavigationManager
                .NavigateTo($"/Todoist/ProcessAction/{id}");
        }
        catch (NavigationException)
        {
            throw;
        }
        catch (Exception ex)
        {
            Logger
                .LogError("Oauth.razor error: {message}", ex.Message);

            NavigationManager
                .NavigateTo($"/Error");
        }
    }

}